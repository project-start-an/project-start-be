# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    
  test:
    runs-on: ubuntu-latest
    needs:
      - build
      
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
      
    - run: npm ci
    - run: npm test

  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install Ansible
      run: python -m pip install ansible

    - name: Install docker module
      run: ansible-galaxy collection install community.docker
    
    - name: Test connection to server through `ansible.cfg`
      run: ansible all -m ping

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 167.71.37.159 >> ~/.ssh/known_hosts

    # - name: Run Ansible Playbook (Staging)
    #   run: ansible-playbook -i inventory/staging playbook.yml
    #   env:
    #     ANSIBLE_STDOUT_CALLBACK: yaml

    - name: Copy Ansible folder to runner
      run: |
        cp -r ansible $GITHUB_WORKSPACE

    - name: Run Ansible Playbook (Production)
      run: ansible-playbook -i ansible/inventory.ini ansible/prod/compose-deployment.yaml
